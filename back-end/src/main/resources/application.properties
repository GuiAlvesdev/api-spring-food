spring.datasource.url=jdbc:mysql://localhost/apifood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Gg131300

#spring.jpa.generate-ddl=true               pega o sql.data e executa via hibernate
#spring.jpa.hibernate.ddl-auto=create       cria automaticamente as tables via hibernate

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false








##spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
##CRIA SCRIPTS SQL
##spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resource/ddl.sql
#
#
#
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
#
#
#
##IGNORA SE COLOCAR UM ATRIBUTO NO JSON QUE NAO EXISTE E UM IGNORADO PELO JSON
#
#spring.jackson.deserialization.fail-on-unkown-properties=true
#spring.jackson.deserialization.fail-on-ignored-properties=true
#
#spring.mvc.throw-exception-if-no-handler-found=true
#spring.resources.add-mappings=false